#!/usr/bin/env node
var e=require("chalk"),i=require("fs"),n=require("path"),r=require("fs-extra"),o=require("commander");function t(e){return e&&e.__esModule?e.default:e}var s;s=JSON.parse('{"initialPath":"./","prefix":"\\n[Organize]:","fileExtensions":{"images":["jpg","jpeg","png","jp2","j2k","jpf","jpx","jpm","mj2","heif","heic","arw","cr2","nrw","k25","tiff","tif","bmp","dib","jpe","jif","jfif","jfi","gif","webp"],"icons":["svg","svgz","ico"],"documents":["txt","pdf","doc","docx","docm","dot","dotx","pages","uof","odt","xls","xlsx","xps","ods","ppt","pptx","odp","epub","gslides","key","keynote","pez","pot","pps","ppt","pptx","prz","sdd","show","sti","sxi"],"music":["mp3","wav","m4a","flac","wma","aac","ogg","oga","mogg","opus","3gp"],"videos":["webm","ogv","gifv","rm","amv","mpeg","mp4","mov"],"movies":["vob","drc","rmvb","mkv","flv","wmv","amv","avi"],"archives":["zip","rar","7z","bz2","gz","tar"]}}');const a=()=>{const{initialPath:e}=t(s),{fileExtensions:i}=t(s);return{initialPath:e,fileExtensions:i,fileGroups:Object.keys(i)}},c=e=>{if(!e)return;const i=e.replace(/\s/g,"").split(",");if(2===i.length){const e=i[0];return{fileExtensions:{[e]:i[1]},fileGroups:[e]}}},l=e=>{if(!e)return;const{fileGroups:i,fileExtensions:n}=a(),r=e.toLowerCase(),o=i.find((e=>n[e].includes(r)));return o?{[o]:[r]}:void 0},g=e=>{if(!e)return;const{fileGroups:i,fileExtensions:n}=a(),r=e.includes(" ")?e.split(" ").map((e=>e.toLowerCase())):[e];return Object.fromEntries(i.filter((e=>!r.includes(e))).map((e=>[e,n[e]])))},{prefix:f}=t(s);let p;var u;(u=p||(p={})).Info="info",u.Success="success",u.Warning="warning",u.Casual="casual";const d=(i,n)=>console.log(e.red.bgBlack.bold(`${i} ${n&&`: ${n}`}`)),m=(i,n)=>{switch(n){case p.Success:return console.log(`${f} ${e.green.bold(i)}`);case p.Info:return console.log(`${f} ${e.yellowBright.bold(i)}`);case p.Warning:return console.log(`${f} ${(0,e.red)(i)}`);case p.Casual:default:return console.log(`${f} ${(0,e.grey)(i)}`)}};let v;var x;(x=v||(v={})).OnMove="onMove",x.ReadDir="readDir",x.Parameter="parameter";const h=(e,i)=>{switch(e){case v.OnMove:return d("Error while moving file",i);case v.ReadDir:return d("Unable to scan directory",i);case v.Parameter:return d("Error, check if you entered parameter value correctly",i);default:return d("Unexpected error",i)}},$=e=>{const{fileExtensions:i}=a();if(!e)return;const n=e.toLowerCase();if(n in i){return{[n]:i[n]}}h(v.Parameter)},y=e=>{const i=(0,n.extname)(e);return i.slice(1,i.length).toLowerCase()},w=(e,i,n)=>{const r=e.find((e=>i[e]?.includes(n)));if(r)return(o=r).slice(0,1).toUpperCase()+o.slice(1).toLowerCase();var o},b=e=>{const{initialPath:n}=a(),r=`${n}/${e}`;if(!(0,i.existsSync)(r))return(0,i.mkdir)(r,(e=>h(v.ReadDir,e)))},j=(e,n,o)=>{if(!n)return;const{initialPath:t}=a(),s=`${t}/${n}/${e}`,c=`${t}/${e}`;if(b(n),!(0,i.existsSync)(s)){try{(0,r.moveSync)(c,s)}catch(e){h(v.OnMove,e)}return o(),m(`Moving ${e} into ${n}/${e}`,p.Casual)}return(0,i.existsSync)(s)?m(`${e} already exist in ${n} directory, skipping...`,p.Warning):void 0},z=(e,n)=>{const{initialPath:r}=a();let o=0;(0,i.readdir)(r,((i,r)=>{if(i)return h(v.ReadDir,i);r.forEach(((i,t)=>{const s=y(i);if(!s)return;const a=w(e,n,s);return j(i,a,(()=>{o+=1})),0===o&&t===r.length-1?(m("No files found to be organized\n",p.Info),process.exit()):t===r.length-1?(m(`Organized ${o} files\n`,p.Success),process.exit()):void 0}))}))};var E=n.resolve(__dirname,"../src/options");const k=require(`${(0,n.join)(E,"../../package.json")}`),O=new(0,o.Command);O.version(k.version).description(`${(0,e.green)("Organize")} your files \n${(0,e.magentaBright)("[Categories]")}: ${Object.keys(s.fileExtensions).join(", ")}\n      `),O.option("-i, --ignore [category or categories]",`Ignore files from one or many categories, e.g ${e.magentaBright.italic("organize -i 'videos'")} or ${e.magentaBright.italic("organize -i 'videos, movies, music'")}`),O.option("-o, --only [files group]",`Organize by only one category, e.g ${e.magentaBright.italic("organize -o 'videos'")}`),O.option("-e, --extension [file extension]",`Organize files with specified extension, e.g ${e.magentaBright.italic("organize -e 'webm'")}`),O.option("-c, --custom [new category, file extension]",`Organize files with extension which categories don't contain, e.g ${e.magentaBright.italic("organize -e 'Javascript, js'")}`),O.parse(process.argv);const{fileGroups:C,fileExtensions:P}=a(),B=O.opts();if(B.ignore){const e=g(B.ignore);e&&z(C,e)}if(B.only){const e=$(B.only);e&&z(C,e)}if(B.extension){const e=l(B.extension);e&&z(C,e)}if(B.custom){const e=c(B.custom);if(e){const{fileGroups:i,fileExtensions:n}=e;z(i,n)}}z(C,P);
//# sourceMappingURL=index.js.map
